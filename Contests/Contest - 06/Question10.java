/*
    Given a string containing of ‘0’, ‘1’ and ‘?’ wildcard characters, generate all binary strings that can be formed by replacing each wildcard character by ‘0’ or ‘1’.

    Input Format - The first line of input contains a single integer T denoting the number of test cases. Then T test cases follow. Each test case consist of two lines. The first line of each test case consists of a string S.
    Constraints - 1 ≤ T ≤ 60 1 ≤ length of string S ≤ 30
    Output Format - Print all binary string that can be formed by replacing each wildcard character separated by space.
    Sample Input - 
        1
        1??0?101
    Sample Output - 
        10000101 10001101 10100101 10101101 11000101 11001101 11100101 11101101
    Explanation - For the Given test case, 10000101 can be generated by replacing wildcard character from 1??0?101 by 0s.
*/

import java.util.Scanner;

public class Question10 {
    public static void generateBinaryStrings(String s, int index, StringBuilder sb){
        if(index == s.length()){
            System.out.print(sb.toString() + " ");
            return;
        }
        if(s.charAt(index) != '?'){
            sb.append(s.charAt(index));
            generateBinaryStrings(s, index + 1, sb);
            sb.deleteCharAt(sb.length() - 1);
        }else{
            sb.append('0');
            generateBinaryStrings(s, index + 1, sb);
            sb.deleteCharAt(sb.length() - 1);
            sb.append('1');
            generateBinaryStrings(s, index + 1, sb);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
    public static void main(String args[]) {
        try(Scanner sc = new Scanner(System.in)){
            int T = sc.nextInt();
            while(T-- >= 0){
                String str = sc.nextLine();
                StringBuilder sb = new StringBuilder("");
                generateBinaryStrings(str, 0, sb);
                System.out.println();
            }
        }
    }
}